'use strict';

var _interopRequireWildcard = require('@babel/runtime/helpers/interopRequireWildcard');

var _interopRequireDefault = require('@babel/runtime/helpers/interopRequireDefault');

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require('prop-types'));

var _react = _interopRequireWildcard(require('react'));

var _botframeworkWebchatComponent = require('botframework-webchat-component');

var _AdaptiveCardBuilder = _interopRequireDefault(require('./AdaptiveCardBuilder'));

var _AdaptiveCardRenderer = _interopRequireDefault(require('./AdaptiveCardRenderer'));

var OAuthCardAttachment = function OAuthCardAttachment(_ref) {
  var adaptiveCardHostConfig = _ref.adaptiveCardHostConfig,
    adaptiveCards = _ref.adaptiveCards,
    _ref$attachment = _ref.attachment;
  _ref$attachment = _ref$attachment === void 0 ? {} : _ref$attachment;
  var content = _ref$attachment.content,
    options = _ref.styleSet.options;
  var builtCard = (0, _react.useMemo)(
    function() {
      if (content) {
        var builder = new _AdaptiveCardBuilder.default(adaptiveCards, options);
        builder.addCommonHeaders(content);
        builder.addButtons((content || {}).buttons, true);
        return builder.card;
      }
    },
    [adaptiveCards, content, options]
  );
  return _react.default.createElement(_AdaptiveCardRenderer.default, {
    adaptiveCard: builtCard,
    adaptiveCardHostConfig: adaptiveCardHostConfig
  });
};

OAuthCardAttachment.propTypes = {
  adaptiveCardHostConfig: _propTypes.default.any.isRequired,
  adaptiveCards: _propTypes.default.any.isRequired,
  attachment: _propTypes.default.shape({
    content: _propTypes.default.shape({
      buttons: _propTypes.default.array
    }).isRequired
  }).isRequired,
  styleSet: _propTypes.default.shape({
    options: _propTypes.default.any.isRequired
  }).isRequired
};

var _default = (0, _botframeworkWebchatComponent.connectToWebChat)(function(_ref2) {
  var styleSet = _ref2.styleSet;
  return {
    styleSet: styleSet
  };
})(OAuthCardAttachment);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hZGFwdGl2ZUNhcmRzL0F0dGFjaG1lbnQvT0F1dGhDYXJkQXR0YWNobWVudC5qcyJdLCJuYW1lcyI6WyJPQXV0aENhcmRBdHRhY2htZW50IiwiYWRhcHRpdmVDYXJkSG9zdENvbmZpZyIsImFkYXB0aXZlQ2FyZHMiLCJhdHRhY2htZW50IiwiY29udGVudCIsIm9wdGlvbnMiLCJzdHlsZVNldCIsImJ1aWx0Q2FyZCIsImJ1aWxkZXIiLCJBZGFwdGl2ZUNhcmRCdWlsZGVyIiwiYWRkQ29tbW9uSGVhZGVycyIsImFkZEJ1dHRvbnMiLCJidXR0b25zIiwiY2FyZCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImFueSIsImlzUmVxdWlyZWQiLCJzaGFwZSIsImFycmF5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUVBLElBQU1BLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsT0FLdEI7QUFBQSxNQUpKQyxzQkFJSSxRQUpKQSxzQkFJSTtBQUFBLE1BSEpDLGFBR0ksUUFISkEsYUFHSTtBQUFBLDZCQUZKQyxVQUVJO0FBQUEsaURBRnNCLEVBRXRCO0FBQUEsTUFGVUMsT0FFVixtQkFGVUEsT0FFVjtBQUFBLE1BRFFDLE9BQ1IsUUFESkMsUUFDSSxDQURRRCxPQUNSO0FBQ0osTUFBTUUsU0FBUyxHQUFHLG9CQUFRLFlBQU07QUFDOUIsUUFBSUgsT0FBSixFQUFhO0FBQ1gsVUFBTUksT0FBTyxHQUFHLElBQUlDLDRCQUFKLENBQXdCUCxhQUF4QixFQUF1Q0csT0FBdkMsQ0FBaEI7QUFFQUcsTUFBQUEsT0FBTyxDQUFDRSxnQkFBUixDQUF5Qk4sT0FBekI7QUFDQUksTUFBQUEsT0FBTyxDQUFDRyxVQUFSLENBQW1CLENBQUNQLE9BQU8sSUFBSSxFQUFaLEVBQWdCUSxPQUFuQyxFQUE0QyxJQUE1QztBQUVBLGFBQU9KLE9BQU8sQ0FBQ0ssSUFBZjtBQUNEO0FBQ0YsR0FUaUIsRUFTZixDQUFDWCxhQUFELEVBQWdCRSxPQUFoQixFQUF5QkMsT0FBekIsQ0FUZSxDQUFsQjtBQVdBLFNBQU8sNkJBQUMsNkJBQUQ7QUFBc0IsSUFBQSxZQUFZLEVBQUVFLFNBQXBDO0FBQStDLElBQUEsc0JBQXNCLEVBQUVOO0FBQXZFLElBQVA7QUFDRCxDQWxCRDs7QUFvQkFELG1CQUFtQixDQUFDYyxTQUFwQixHQUFnQztBQUM5QmIsRUFBQUEsc0JBQXNCLEVBQUVjLG1CQUFVQyxHQUFWLENBQWNDLFVBRFI7QUFFOUJmLEVBQUFBLGFBQWEsRUFBRWEsbUJBQVVDLEdBQVYsQ0FBY0MsVUFGQztBQUc5QmQsRUFBQUEsVUFBVSxFQUFFWSxtQkFBVUcsS0FBVixDQUFnQjtBQUMxQmQsSUFBQUEsT0FBTyxFQUFFVyxtQkFBVUcsS0FBVixDQUFnQjtBQUN2Qk4sTUFBQUEsT0FBTyxFQUFFRyxtQkFBVUk7QUFESSxLQUFoQixFQUVORjtBQUh1QixHQUFoQixFQUlUQSxVQVAyQjtBQVE5QlgsRUFBQUEsUUFBUSxFQUFFUyxtQkFBVUcsS0FBVixDQUFnQjtBQUN4QmIsSUFBQUEsT0FBTyxFQUFFVSxtQkFBVUMsR0FBVixDQUFjQztBQURDLEdBQWhCLEVBRVBBO0FBVjJCLENBQWhDOztlQWFlLG9EQUFpQjtBQUFBLE1BQUdYLFFBQUgsU0FBR0EsUUFBSDtBQUFBLFNBQW1CO0FBQUVBLElBQUFBLFFBQVEsRUFBUkE7QUFBRixHQUFuQjtBQUFBLENBQWpCLEVBQW1ETixtQkFBbkQsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgY29ubmVjdFRvV2ViQ2hhdCB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvbXBvbmVudCc7XG5pbXBvcnQgQWRhcHRpdmVDYXJkQnVpbGRlciBmcm9tICcuL0FkYXB0aXZlQ2FyZEJ1aWxkZXInO1xuaW1wb3J0IEFkYXB0aXZlQ2FyZFJlbmRlcmVyIGZyb20gJy4vQWRhcHRpdmVDYXJkUmVuZGVyZXInO1xuXG5jb25zdCBPQXV0aENhcmRBdHRhY2htZW50ID0gKHtcbiAgYWRhcHRpdmVDYXJkSG9zdENvbmZpZyxcbiAgYWRhcHRpdmVDYXJkcyxcbiAgYXR0YWNobWVudDogeyBjb250ZW50IH0gPSB7fSxcbiAgc3R5bGVTZXQ6IHsgb3B0aW9ucyB9XG59KSA9PiB7XG4gIGNvbnN0IGJ1aWx0Q2FyZCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIGlmIChjb250ZW50KSB7XG4gICAgICBjb25zdCBidWlsZGVyID0gbmV3IEFkYXB0aXZlQ2FyZEJ1aWxkZXIoYWRhcHRpdmVDYXJkcywgb3B0aW9ucyk7XG5cbiAgICAgIGJ1aWxkZXIuYWRkQ29tbW9uSGVhZGVycyhjb250ZW50KTtcbiAgICAgIGJ1aWxkZXIuYWRkQnV0dG9ucygoY29udGVudCB8fCB7fSkuYnV0dG9ucywgdHJ1ZSk7XG5cbiAgICAgIHJldHVybiBidWlsZGVyLmNhcmQ7XG4gICAgfVxuICB9LCBbYWRhcHRpdmVDYXJkcywgY29udGVudCwgb3B0aW9uc10pO1xuXG4gIHJldHVybiA8QWRhcHRpdmVDYXJkUmVuZGVyZXIgYWRhcHRpdmVDYXJkPXtidWlsdENhcmR9IGFkYXB0aXZlQ2FyZEhvc3RDb25maWc9e2FkYXB0aXZlQ2FyZEhvc3RDb25maWd9IC8+O1xufTtcblxuT0F1dGhDYXJkQXR0YWNobWVudC5wcm9wVHlwZXMgPSB7XG4gIGFkYXB0aXZlQ2FyZEhvc3RDb25maWc6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZCxcbiAgYWRhcHRpdmVDYXJkczogUHJvcFR5cGVzLmFueS5pc1JlcXVpcmVkLFxuICBhdHRhY2htZW50OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGNvbnRlbnQ6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBidXR0b25zOiBQcm9wVHlwZXMuYXJyYXlcbiAgICB9KS5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWQsXG4gIHN0eWxlU2V0OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIG9wdGlvbnM6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0VG9XZWJDaGF0KCh7IHN0eWxlU2V0IH0pID0+ICh7IHN0eWxlU2V0IH0pKShPQXV0aENhcmRBdHRhY2htZW50KTtcbiJdfQ==
