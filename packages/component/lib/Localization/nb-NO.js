'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.default = void 0;

var _getLocaleString = _interopRequireDefault(require('./getLocaleString'));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint no-magic-numbers: ["error", { "ignore": [1, 5, 24, 48, 60000, 3600000] }] */
function xMinutesAgo(dateStr) {
  var date = new Date(dateStr);
  var dateTime = date.getTime();

  if (isNaN(dateTime)) {
    return dateStr;
  }

  var now = Date.now();
  var deltaInMs = now - dateTime;
  var deltaInMinutes = Math.floor(deltaInMs / 60000);
  var deltaInHours = Math.floor(deltaInMs / 3600000);

  if (deltaInMinutes < 1) {
    return 'Akkurat nå';
  } else if (deltaInMinutes === 1) {
    return 'Et minutt siden';
  } else if (deltaInHours < 1) {
    return ''.concat(deltaInMinutes, ' minutter siden');
  } else if (deltaInHours === 1) {
    return 'En time siden';
  } else if (deltaInHours < 5) {
    return ''.concat(deltaInHours, ' timer siden');
  } else if (deltaInHours <= 24) {
    return 'I dag';
  } else if (deltaInHours <= 48) {
    return 'I g\xE5r';
  }

  return (0, _getLocaleString.default)(date, 'nb-NO');
}

function botSaidSomething(avatarInitials, text) {
  return 'Bot '.concat(avatarInitials, ' sa, ').concat(text);
}

function downloadFileWithFileSize(downloadFileText, fileName, size) {
  // Full text should read: "Download file <filename> of size <filesize>"
  return ''
    .concat(downloadFileText, ' ')
    .concat(fileName, ' med st\xF8rrelse ')
    .concat(size);
}

function userSaidSomething(avatarInitials, text) {
  return 'Bruker '.concat(avatarInitials, ' sa, ').concat(text);
}

var _default = {
  FAILED_CONNECTION_NOTIFICATION: 'Kan ikke koble til.',
  INITIAL_CONNECTION_NOTIFICATION: 'Kobler til…',
  INTERRUPTED_CONNECTION_NOTIFICATION: 'Nettverksavbrudd oppstod. Kobler til på nytt…',
  RENDER_ERROR_NOTIFICATION: 'Rederingsfeil. Sjekk utviklerkonsollen eller kontakt botutvikleren.',
  // Do not localize {Retry}; it is a placeholder for "Retry". English translation should be, "Send failed. Retry."
  SEND_FAILED_KEY: 'Kunne ikke sende. {Retry}.',
  SLOW_CONNECTION_NOTIFICATION: 'Det tar lenger tid enn vanlig å koble til.',
  'Bot said something': botSaidSomething,
  'User said something': userSaidSomething,
  'X minutes ago': xMinutesAgo,
  // '[File of type '%1']': '[File of type '%1']",
  // '[Unknown Card '%1']': '[Unknown Card '%1']',
  'Adaptive Card parse error': 'Adaptivt kort parse-feil',
  'Adaptive Card render error': 'Adaptivt kort renderingsfeil',
  BotSent: 'Bot sendte: ',
  Chat: 'Chat',
  'Download file': 'Last ned fil',
  DownloadFileWithFileSize: downloadFileWithFileSize,
  ErrorMessage: 'Feilmelding',
  'Microphone off': 'Mikrofon av',
  'Microphone on': 'Mikrofon på',
  Left: 'Venstre',
  'Listening…': 'Lytter…',
  'New messages': 'Nye meldinger',
  Retry: 'Prøv igjen',
  Right: 'Høyre',
  Send: 'Send',
  Sending: 'Sender',
  SendStatus: 'Send status: ',
  SentAt: 'Sendt: ',
  Speak: 'Snakk',
  'Starting…': 'Starter…',
  Tax: 'Skatt',
  Total: 'Totalt',
  'Type your message': 'Skriv inn melding',
  TypingIndicator: 'Viser skriveindikator',
  'Upload file': 'Last opp fil',
  UserSent: 'Bruker sendte: ',
  VAT: 'MVA'
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Mb2NhbGl6YXRpb24vbmItTk8uanMiXSwibmFtZXMiOlsieE1pbnV0ZXNBZ28iLCJkYXRlU3RyIiwiZGF0ZSIsIkRhdGUiLCJkYXRlVGltZSIsImdldFRpbWUiLCJpc05hTiIsIm5vdyIsImRlbHRhSW5NcyIsImRlbHRhSW5NaW51dGVzIiwiTWF0aCIsImZsb29yIiwiZGVsdGFJbkhvdXJzIiwiYm90U2FpZFNvbWV0aGluZyIsImF2YXRhckluaXRpYWxzIiwidGV4dCIsImRvd25sb2FkRmlsZVdpdGhGaWxlU2l6ZSIsImRvd25sb2FkRmlsZVRleHQiLCJmaWxlTmFtZSIsInNpemUiLCJ1c2VyU2FpZFNvbWV0aGluZyIsIkZBSUxFRF9DT05ORUNUSU9OX05PVElGSUNBVElPTiIsIklOSVRJQUxfQ09OTkVDVElPTl9OT1RJRklDQVRJT04iLCJJTlRFUlJVUFRFRF9DT05ORUNUSU9OX05PVElGSUNBVElPTiIsIlJFTkRFUl9FUlJPUl9OT1RJRklDQVRJT04iLCJTRU5EX0ZBSUxFRF9LRVkiLCJTTE9XX0NPTk5FQ1RJT05fTk9USUZJQ0FUSU9OIiwiQm90U2VudCIsIkNoYXQiLCJEb3dubG9hZEZpbGVXaXRoRmlsZVNpemUiLCJFcnJvck1lc3NhZ2UiLCJMZWZ0IiwiUmV0cnkiLCJSaWdodCIsIlNlbmQiLCJTZW5kaW5nIiwiU2VuZFN0YXR1cyIsIlNlbnRBdCIsIlNwZWFrIiwiVGF4IiwiVG90YWwiLCJUeXBpbmdJbmRpY2F0b3IiLCJVc2VyU2VudCIsIlZBVCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBOzs7O0FBRkE7QUFJQSxTQUFTQSxXQUFULENBQXFCQyxPQUFyQixFQUE4QjtBQUM1QixNQUFNQyxJQUFJLEdBQUcsSUFBSUMsSUFBSixDQUFTRixPQUFULENBQWI7QUFDQSxNQUFNRyxRQUFRLEdBQUdGLElBQUksQ0FBQ0csT0FBTCxFQUFqQjs7QUFFQSxNQUFJQyxLQUFLLENBQUNGLFFBQUQsQ0FBVCxFQUFxQjtBQUNuQixXQUFPSCxP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LEVBQUUsdUJBcENKO0FBcUNiLGlCQUFlLGNBckNGO0FBc0NiQyxFQUFBQSxRQUFRLEVBQUUsaUJBdENHO0FBdUNiQyxFQUFBQSxHQUFHLEVBQUU7QUF2Q1EsQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiBbXCJlcnJvclwiLCB7IFwiaWdub3JlXCI6IFsxLCA1LCAyNCwgNDgsIDYwMDAwLCAzNjAwMDAwXSB9XSAqL1xuXG5pbXBvcnQgZ2V0TG9jYWxlU3RyaW5nIGZyb20gJy4vZ2V0TG9jYWxlU3RyaW5nJztcblxuZnVuY3Rpb24geE1pbnV0ZXNBZ28oZGF0ZVN0cikge1xuICBjb25zdCBkYXRlID0gbmV3IERhdGUoZGF0ZVN0cik7XG4gIGNvbnN0IGRhdGVUaW1lID0gZGF0ZS5nZXRUaW1lKCk7XG5cbiAgaWYgKGlzTmFOKGRhdGVUaW1lKSkge1xuICAgIHJldHVybiBkYXRlU3RyO1xuICB9XG5cbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgY29uc3QgZGVsdGFJbk1zID0gbm93IC0gZGF0ZVRpbWU7XG4gIGNvbnN0IGRlbHRhSW5NaW51dGVzID0gTWF0aC5mbG9vcihkZWx0YUluTXMgLyA2MDAwMCk7XG4gIGNvbnN0IGRlbHRhSW5Ib3VycyA9IE1hdGguZmxvb3IoZGVsdGFJbk1zIC8gMzYwMDAwMCk7XG5cbiAgaWYgKGRlbHRhSW5NaW51dGVzIDwgMSkge1xuICAgIHJldHVybiAnQWtrdXJhdCBuw6UnO1xuICB9IGVsc2UgaWYgKGRlbHRhSW5NaW51dGVzID09PSAxKSB7XG4gICAgcmV0dXJuICdFdCBtaW51dHQgc2lkZW4nO1xuICB9IGVsc2UgaWYgKGRlbHRhSW5Ib3VycyA8IDEpIHtcbiAgICByZXR1cm4gYCR7ZGVsdGFJbk1pbnV0ZXN9IG1pbnV0dGVyIHNpZGVuYDtcbiAgfSBlbHNlIGlmIChkZWx0YUluSG91cnMgPT09IDEpIHtcbiAgICByZXR1cm4gYEVuIHRpbWUgc2lkZW5gO1xuICB9IGVsc2UgaWYgKGRlbHRhSW5Ib3VycyA8IDUpIHtcbiAgICByZXR1cm4gYCR7ZGVsdGFJbkhvdXJzfSB0aW1lciBzaWRlbmA7XG4gIH0gZWxzZSBpZiAoZGVsdGFJbkhvdXJzIDw9IDI0KSB7XG4gICAgcmV0dXJuIGBJIGRhZ2A7XG4gIH0gZWxzZSBpZiAoZGVsdGFJbkhvdXJzIDw9IDQ4KSB7XG4gICAgcmV0dXJuIGBJIGfDpXJgO1xuICB9XG4gIHJldHVybiBnZXRMb2NhbGVTdHJpbmcoZGF0ZSwgJ25iLU5PJyk7XG59XG5cbmZ1bmN0aW9uIGJvdFNhaWRTb21ldGhpbmcoYXZhdGFySW5pdGlhbHMsIHRleHQpIHtcbiAgcmV0dXJuIGBCb3QgJHthdmF0YXJJbml0aWFsc30gc2EsICR7dGV4dH1gO1xufVxuXG5mdW5jdGlvbiBkb3dubG9hZEZpbGVXaXRoRmlsZVNpemUoZG93bmxvYWRGaWxlVGV4dCwgZmlsZU5hbWUsIHNpemUpIHtcbiAgLy8gRnVsbCB0ZXh0IHNob3VsZCByZWFkOiBcIkRvd25sb2FkIGZpbGUgPGZpbGVuYW1lPiBvZiBzaXplIDxmaWxlc2l6ZT5cIlxuICByZXR1cm4gYCR7ZG93bmxvYWRGaWxlVGV4dH0gJHtmaWxlTmFtZX0gbWVkIHN0w7hycmVsc2UgJHtzaXplfWA7XG59XG5cbmZ1bmN0aW9uIHVzZXJTYWlkU29tZXRoaW5nKGF2YXRhckluaXRpYWxzLCB0ZXh0KSB7XG4gIHJldHVybiBgQnJ1a2VyICR7YXZhdGFySW5pdGlhbHN9IHNhLCAke3RleHR9YDtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBGQUlMRURfQ09OTkVDVElPTl9OT1RJRklDQVRJT046ICdLYW4gaWtrZSBrb2JsZSB0aWwuJyxcbiAgSU5JVElBTF9DT05ORUNUSU9OX05PVElGSUNBVElPTjogJ0tvYmxlciB0aWzigKYnLFxuICBJTlRFUlJVUFRFRF9DT05ORUNUSU9OX05PVElGSUNBVElPTjogJ05ldHR2ZXJrc2F2YnJ1ZGQgb3Bwc3RvZC4gS29ibGVyIHRpbCBww6Ugbnl0dOKApicsXG4gIFJFTkRFUl9FUlJPUl9OT1RJRklDQVRJT046ICdSZWRlcmluZ3NmZWlsLiBTamVrayB1dHZpa2xlcmtvbnNvbGxlbiBlbGxlciBrb250YWt0IGJvdHV0dmlrbGVyZW4uJyxcbiAgLy8gRG8gbm90IGxvY2FsaXplIHtSZXRyeX07IGl0IGlzIGEgcGxhY2Vob2xkZXIgZm9yIFwiUmV0cnlcIi4gRW5nbGlzaCB0cmFuc2xhdGlvbiBzaG91bGQgYmUsIFwiU2VuZCBmYWlsZWQuIFJldHJ5LlwiXG4gIFNFTkRfRkFJTEVEX0tFWTogYEt1bm5lIGlra2Ugc2VuZGUuIHtSZXRyeX0uYCxcbiAgU0xPV19DT05ORUNUSU9OX05PVElGSUNBVElPTjogJ0RldCB0YXIgbGVuZ2VyIHRpZCBlbm4gdmFubGlnIMOlIGtvYmxlIHRpbC4nLFxuICAnQm90IHNhaWQgc29tZXRoaW5nJzogYm90U2FpZFNvbWV0aGluZyxcbiAgJ1VzZXIgc2FpZCBzb21ldGhpbmcnOiB1c2VyU2FpZFNvbWV0aGluZyxcbiAgJ1ggbWludXRlcyBhZ28nOiB4TWludXRlc0FnbyxcbiAgLy8gJ1tGaWxlIG9mIHR5cGUgJyUxJ10nOiAnW0ZpbGUgb2YgdHlwZSAnJTEnXVwiLFxuICAvLyAnW1Vua25vd24gQ2FyZCAnJTEnXSc6ICdbVW5rbm93biBDYXJkICclMSddJyxcbiAgJ0FkYXB0aXZlIENhcmQgcGFyc2UgZXJyb3InOiAnQWRhcHRpdnQga29ydCBwYXJzZS1mZWlsJyxcbiAgJ0FkYXB0aXZlIENhcmQgcmVuZGVyIGVycm9yJzogJ0FkYXB0aXZ0IGtvcnQgcmVuZGVyaW5nc2ZlaWwnLFxuICBCb3RTZW50OiAnQm90IHNlbmR0ZTogJyxcbiAgQ2hhdDogJ0NoYXQnLFxuICAnRG93bmxvYWQgZmlsZSc6ICdMYXN0IG5lZCBmaWwnLFxuICBEb3dubG9hZEZpbGVXaXRoRmlsZVNpemU6IGRvd25sb2FkRmlsZVdpdGhGaWxlU2l6ZSxcbiAgRXJyb3JNZXNzYWdlOiAnRmVpbG1lbGRpbmcnLFxuICAnTWljcm9waG9uZSBvZmYnOiAnTWlrcm9mb24gYXYnLFxuICAnTWljcm9waG9uZSBvbic6ICdNaWtyb2ZvbiBww6UnLFxuICBMZWZ0OiAnVmVuc3RyZScsXG4gICdMaXN0ZW5pbmfigKYnOiAnTHl0dGVy4oCmJyxcbiAgJ05ldyBtZXNzYWdlcyc6ICdOeWUgbWVsZGluZ2VyJyxcbiAgUmV0cnk6ICdQcsO4diBpZ2plbicsXG4gIFJpZ2h0OiAnSMO4eXJlJyxcbiAgU2VuZDogJ1NlbmQnLFxuICBTZW5kaW5nOiAnU2VuZGVyJyxcbiAgU2VuZFN0YXR1czogJ1NlbmQgc3RhdHVzOiAnLFxuICBTZW50QXQ6ICdTZW5kdDogJyxcbiAgU3BlYWs6ICdTbmFraycsXG4gICdTdGFydGluZ+KApic6ICdTdGFydGVy4oCmJyxcbiAgVGF4OiAnU2thdHQnLFxuICBUb3RhbDogJ1RvdGFsdCcsXG4gICdUeXBlIHlvdXIgbWVzc2FnZSc6ICdTa3JpdiBpbm4gbWVsZGluZycsXG4gIFR5cGluZ0luZGljYXRvcjogJ1Zpc2VyIHNrcml2ZWluZGlrYXRvcicsXG4gICdVcGxvYWQgZmlsZSc6ICdMYXN0IG9wcCBmaWwnLFxuICBVc2VyU2VudDogJ0JydWtlciBzZW5kdGU6ICcsXG4gIFZBVDogJ01WQSdcbn07XG4iXX0=
